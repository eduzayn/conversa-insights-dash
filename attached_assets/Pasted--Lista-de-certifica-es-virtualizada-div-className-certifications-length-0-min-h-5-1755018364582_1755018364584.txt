{/* Lista de certificações (virtualizada) */}
<div className={certifications.length > 0 ? "min-h-[500px] w-full" : "min-h-[400px] w-full"}>
  {isInitialLoading ? (
    <div className="flex justify-center p-8">
      <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
    </div>
  ) : certifications.length === 0 ? (
    <div className="w-full flex justify-center items-center min-h-[250px] px-4">
      <Card className="w-full max-w-2xl mx-auto">
        <CardContent className="p-8 text-center">
          <FileText className="mx-auto h-12 w-12 text-gray-400 mb-4" />
          <div className="text-lg font-medium text-gray-900 mb-2">
            {activeTab === 'eja' ? 'Categoria EJA não possui certificações' : 'Nenhuma certificação encontrada'}
          </div>
          <div className="text-gray-600 text-sm">
            {activeTab === 'eja' 
              ? 'Esta categoria está vazia. Verifique se os dados foram importados corretamente ou crie uma nova certificação EJA.'
              : 'Crie uma nova certificação para começar'
            }
          </div>
        </CardContent>
      </Card>
    </div>
  ) : (
    <div
      style={{
        height: rowVirtualizer.getTotalSize(),
        position: 'relative',
        width: '100%',
      }}
    >
      {rowVirtualizer.getVirtualItems().map((virtualRow) => {
        const certification = certifications[virtualRow.index];

        // Verificar duplicata (mantém sua lógica)
        const isDuplicate = Object.values(duplicates).some(group =>
          group.some(cert => cert.id === certification.id)
        );

        return (
          <div
            key={certification.id}
            ref={(el) => {
              // mede altura real pra suportar cards com altura variável
              if (el) rowVirtualizer.measureElement(el);
            }}
            style={{
              position: 'absolute',
              top: 0,
              left: 0,
              width: '100%',
              transform: `translateY(${virtualRow.start}px)`,
            }}
            className="mb-4"
          >
            <CertificationCard
              certification={certification}
              isDuplicate={isDuplicate}
              onEdit={setSelectedCertification}
              onDelete={handleDeleteCertification}
              onDuplicate={handleDuplicateCertification}
            />
          </div>
        );
      })}
    </div>
  )}
</div>
