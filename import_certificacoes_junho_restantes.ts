import { db } from './server/db';
import { certifications } from './shared/schema';
import { sql } from 'drizzle-orm';

// Certifica√ß√µes que ainda n√£o foram importadas do arquivo de junho
const certificacoesRestantes = [
  {
    inicio: "Mediana",
    aluno: "Divino Cesario da Silva",
    cpf: "045.188.836-75",
    modalidade: "Segunda licenciatura",
    curso: "Pedagogia",
    financeiro: "Inicio: 14/05/2020 Situa√ß√£o: Quitado",
    documentacao: "N√£o Localizado",
    plataforma: "N√£o Localizado",
    tutoria: "N√£o localizado",
    observacao: "Curso expirado em 14/09/2021",
    status: "concluido",
    cargaHoraria: "1600"
  },
  {
    inicio: "Mediana",
    aluno: "Renata Moreira Goulart da Silveira Guerra",
    cpf: "574.058.837-53",
    modalidade: "Segunda licenciatura",
    curso: "M√∫sica",
    financeiro: "Inicio: 22/12/2023 Situa√ß√£o: Quitada",
    documentacao: "Incompleto",
    plataforma: "Aprovado em todas disciplinas",
    tutoria: "Aprovada",
    observacao: "Expira em 22/04/2025",
    status: "concluido",
    cargaHoraria: "1600"
  },
  {
    inicio: "Mediana",
    aluno: "Jo√£o Pedro Amorim de Oliveira Ara√∫jo",
    cpf: "114.501.706-17",
    modalidade: "Forma√ß√£o pedag√≥gica",
    curso: "Matem√°tica",
    financeiro: "Inicio: 14/02/2023 Situa√ß√£o: Quitado",
    documentacao: "Entregue e Deferida",
    plataforma: "Resta concluir 01 disciplina",
    tutoria: "PPI ok, falta enviar a PPII",
    observacao: "Contratou extens√£o: 20/05/2025 - 20/06/2025",
    status: "em_andamento",
    cargaHoraria: "1000"
  },
  {
    inicio: "Mediana",
    aluno: "Ruana Beth de Almeida",
    cpf: "129.821.847-02",
    modalidade: "P√≥s-gradua√ß√£o",
    curso: "Atendimento Educacional Especializado",
    financeiro: "Inicio: 12/06/2024 Situa√ß√£o: Quitada",
    documentacao: "Entregue e Deferida",
    plataforma: "Aprovado em todas disciplinas",
    tutoria: "N√£o exige",
    observacao: "Expira em 12/10/2025",
    status: "concluido",
    cargaHoraria: "360"
  },
  {
    inicio: "Mediana",
    aluno: "Giancarlo Lucena dos Santos",
    cpf: "659.791.094-05",
    modalidade: "P√≥s-gradua√ß√£o",
    curso: "Ensino de Geografia",
    financeiro: "Brinde, Inicio: 10/01/2024 Situa√ß√£o: Quitada",
    documentacao: "Incompleto",
    plataforma: "Resta concluir 09 disciplinas",
    tutoria: "N√£o exige",
    observacao: "Expira em 06/06/2025",
    status: "em_andamento",
    cargaHoraria: "360"
  },
  {
    inicio: "Mediana",
    aluno: "Thiago Alexandre Gomes F√°varis",
    cpf: "057.885.887-82",
    modalidade: "Forma√ß√£o pedag√≥gica",
    curso: "Letras - Portugu√™s e Espanhol",
    financeiro: "Iniciou em: 14/02/2024 Situa√ß√£o: Quitado",
    documentacao: "Entregue e Deferida",
    plataforma: "Aprovado em todas disciplinas",
    tutoria: "Aprovada",
    observacao: "Expira em 14/06/2025",
    status: "concluido",
    cargaHoraria: "1000"
  },
  {
    inicio: "Mediana",
    aluno: "Saara Vieira de Souza Bastos",
    cpf: "031.927.897-27",
    modalidade: "P√≥s-gradua√ß√£o",
    curso: "Psican√°lise",
    financeiro: "Inicio: 13/09/2023 Situa√ß√£o: Pagou 08 de 16 parcelas",
    documentacao: "N√£o encaminhou nenhum documento",
    plataforma: "Concluiu apenas 01 disciplina",
    tutoria: "N√£o exige",
    observacao: "Expirou em 13/01/2025",
    status: "cancelado",
    cargaHoraria: "360"
  },
  {
    inicio: "Mediana",
    aluno: "Dannielle Harumi de Lucena Babachinas",
    cpf: "224.228.538-62",
    modalidade: "Diploma√ß√£o por compet√™ncia",
    curso: "Pedagogia para Bachar√©is e Tecn√≥logos",
    financeiro: "Inicio: 23/11/2022 Situa√ß√£o: Quitada",
    documentacao: "Incompleto",
    plataforma: "Resta concluir 01 disciplina",
    tutoria: "N√£o localizado",
    observacao: "Expirou em 23/03/2024",
    status: "pendente",
    cargaHoraria: "1600"
  }
];

async function importarCertificacoesJunhoRestantes() {
  console.log('üì• Importando certifica√ß√µes restantes de junho...');
  
  let importadas = 0;
  let erros = 0;
  
  for (const cert of certificacoesRestantes) {
    try {
      console.log(`\nüìã Importando: ${cert.aluno} - ${cert.curso}`);
      
      // Verificar se j√° existe (por CPF + curso)
      const existingCert = await db.select()
        .from(certifications)
        .where(
          // Usando SQL direto para compara√ß√£o mais precisa
          sql`cpf = ${cert.cpf} AND lower(curso) = lower(${cert.curso})`
        );
      
      if (existingCert.length > 0) {
        console.log(`‚ö†Ô∏è  Certifica√ß√£o j√° existe: ${cert.aluno} - ${cert.curso}`);
        continue;
      }
      
      // Inserir nova certifica√ß√£o
      await db.insert(certifications).values({
        inicio: cert.inicio,
        aluno: cert.aluno,
        cpf: cert.cpf,
        modalidade: cert.modalidade,
        curso: cert.curso,
        financeiro: cert.financeiro,
        documentacao: cert.documentacao,
        plataforma: cert.plataforma,
        tutoria: cert.tutoria,
        observacao: cert.observacao,
        status: cert.status,
        cargaHoraria: cert.cargaHoraria,
        categoria: getCategoria(cert.modalidade),
        subcategoria: getSubcategoria(cert.modalidade, cert.curso)
      });
      
      importadas++;
      console.log(`‚úÖ Importada: ${cert.aluno} - ${cert.curso}`);
      
    } catch (error) {
      erros++;
      console.error(`‚ùå Erro ao importar ${cert.aluno} - ${cert.curso}:`, error);
    }
  }
  
  console.log(`\nüìä RESULTADO DA IMPORTA√á√ÉO:`);
  console.log(`‚úÖ Importadas: ${importadas}`);
  console.log(`‚ùå Erros: ${erros}`);
  console.log(`üìã Total processadas: ${certificacoesRestantes.length}`);
}

function getCategoria(modalidade: string): string {
  switch (modalidade.toLowerCase()) {
    case 'segunda licenciatura':
      return 'segunda';
    case 'forma√ß√£o pedag√≥gica':
      return 'formacao_pedagogica';
    case 'p√≥s-gradua√ß√£o':
      return 'pos_graduacao';
    case 'forma√ß√£o livre':
      return 'formacao_livre';
    case 'diploma√ß√£o por compet√™ncia':
      return 'diplomacao';
    case 'eja':
      return 'eja';
    default:
      return 'outras';
  }
}

function getSubcategoria(modalidade: string, curso: string): string {
  if (modalidade.toLowerCase() === 'segunda licenciatura') {
    return 'segunda_licenciatura';
  }
  if (modalidade.toLowerCase() === 'forma√ß√£o pedag√≥gica') {
    return 'formacao_pedagogica';
  }
  if (modalidade.toLowerCase() === 'diploma√ß√£o por compet√™ncia') {
    return 'pedagogia_bachareis';
  }
  return '';
}

// Executar se for chamado diretamente
if (import.meta.url === `file://${process.argv[1]}`) {
  importarCertificacoesJunhoRestantes()
    .then(() => {
      console.log('\n‚úÖ Importa√ß√£o conclu√≠da!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erro na importa√ß√£o:', error);
      process.exit(1);
    });
}

export { importarCertificacoesJunhoRestantes };